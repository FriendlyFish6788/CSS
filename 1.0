import itertools

N = int(input("enter order of CSS: "))
n = N*N + N + 1
terms = N + 1

def accelAsc(n):
    a = [0 for i in range(n + 1)]
    k = 1
    y = n - 1
    while k != 0:
        x = a[k - 1] + 1
        k -= 1
        while 2*x <= y:
            a[k] = x
            y -= x
            k += 1
        l = k + 1
        while x <= y:
            a[k] = x
            a[l] = y
            yield a[:k + 2]
            x += 1
            y -= 1
        a[k] = x + y
        y = x + y - 1
        yield a[:k + 1]

def NumDup(n):
    noDups = []
    for i in n:
        if len(list(set(i))) == terms:
            noDups.append(i)
    return noDups

def filtCopy(n):
    permList = []
    for x in n:
        for i in x:
            if i[0] == 1:
                permList.append(x)
    return permList

def isCSS(L):
    seen = []
    n = len(L)
    for i in range(1,n):
        for start in range(0,n):
            Sum = 0
            for j in range(0,i):
                Sum = Sum + L[(start + j)%n]
            if Sum in seen:
                return False
            seen.append(Sum)
    return True

def UniqCSS(n):
    notUniq = []
    #n = filtCopy(n)
    for i in n:
        for j in i:
            if isCSS(j) == True:
                css = []
                css.append(j)
                notUniq.append(css)
                print("True")
    b = len(notUniq)
    potUniq = []
    Uniq = []
    for x in notUniq:
        c = x[0][1:b]
        d = x[0][b:0:-1]
        if c and d not in (potUniq or Uniq):
            potUniq.append(c)
            potUniq.append(d)
            Uniq.append(x)
    return Uniq

def it(n):
    for i in n:
        yield list(itertools.permutations(i, len(i)))

def CSS(perms):
    cssList = []
    for listPerms in perms:
        for j in listPerms:
            if isCSS(j) == True:
                css = []
                css.append(j)
                css.append(isCSS(j))
                cssList.append(css)
                print("true")
    return cssList

possWithDups = []
possNoDups = []
perms = accelAsc(n)

for i in perms:
    if (len(i) == terms) and (1 in i) and (2 in i):
        possWithDups.append(i)

possNoDups = NumDup(possWithDups)
genPerm = it(possNoDups)

preFinal = []
finalCSS = []
for i in genPerm:
    if i not in finalCSS:
        preFinal.append(i)
print(filtCopy(UniqCSS(preFinal)))
